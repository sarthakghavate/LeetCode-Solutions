class Solution {
    public int maxSubarrayLength(int[] nums, int k) {
        // Sliding Window:
        HashMap<Integer,Integer> map = new HashMap<>();
        int left = 0;
        int right = 0;
        int res = 0;

        while(right < nums.length){
            // put elements and there frequency in map
            map.put(nums[right], map.getOrDefault(nums[right],0) +1);

            // if after adding freq of right to map , while that frequency is greater
            // than k , slide the window , left will be dropped till the left will
            // encounter same element as the element on right.

            while(map.getOrDefault(nums[right],0) > k){
                map.put(nums[left],map.getOrDefault(nums[left],0)-1);
                left += 1;
            }

            // calculte result 
            res = Math.max(res , right - left + 1);
            // increment right
            right++;
        }
        return res;
        
    }
}
