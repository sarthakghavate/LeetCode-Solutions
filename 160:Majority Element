// Problem   : https://leetcode.com/problems/majority-element/
// video sol : https://www.youtube.com/watch?v=nP_ns3uSh80
class Solution {
    public int majorityElement(int[] nums) {
    // Optimal sol: Using Moore's Voting Algorithm
    // step 1 : Apply Algorithm
    // step 2 : vertify element got is majority element or not.
    
     int count =0;
     int element = 0;
     for(int i=0;i<nums.length;i++){
         if(count==0){
             count = 1;
             element=nums[i];
         }
         else if(nums[i] == element){
             count++;
         }
         else{  // nums[i] != element
             count --;
         }
     }
     //now the element we got have chances to be majority element if it satisfied 
     // its occurence is > n/2
     int count1=0;
     for(int num : nums){
         if(num == element){
             count1++;
         }
     }
     if(count1 > nums.length/2){
         return element;
     }
        return -1;
    }
    
}
